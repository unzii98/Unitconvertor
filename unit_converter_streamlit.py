# -*- coding: utf-8 -*-
"""Copy of unit_converter_streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1luxNDX_XbduBPhdKPGpbPB9hMgLtfnSS

\
"""


# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# 
# import streamlit as st  # âœ… Required import
# 
# # --- Conversion Functions ---
# def distance_convertor(from_unit, to_unit, value):
#     factor = {
#         "Meters": 1,
#         "Kilometers": 1000,
#         "Feet": 0.3048,
#         "Miles": 1609.34
#     }
#     return value * factor[from_unit] / factor[to_unit]
# 
# def temperature_convertor(from_unit, to_unit, value):
#     if from_unit == to_unit:
#         return value
#     if from_unit == "Celsius" and to_unit == "Fahrenheit":
#         return value * 9/5 + 32
#     if from_unit == "Fahrenheit" and to_unit == "Celsius":
#         return (value - 32) * 5/9
# 
# def weight_convertor(from_unit, to_unit, value):
#     factor = {
#         "Kilograms": 1,
#         "Grams": 0.001,
#         "Pounds": 0.453592,
#         "Ounces": 0.0283495
#     }
#     return value * factor[from_unit] / factor[to_unit]
# 
# def pressure_convertor(from_unit, to_unit, value):
#     factor = {
#         "Pascals": 1,
#         "Hectopascals": 100,
#         "Kilopascals": 1000,
#         "Bar": 100000
#     }
#     return value * factor[from_unit] / factor[to_unit]
# 
# # --- Streamlit UI ---
# st.title("Unit Converter")
# category = st.selectbox("Select Category", ["Distance", "Temperature", "Weight", "Pressure"])
# 
# if category == "Distance":
#     from_unit = st.selectbox("From", ["Meters", "Kilometers", "Feet", "Miles"])
#     to_unit = st.selectbox("To", ["Meters", "Kilometers", "Feet", "Miles"])
#     value = st.number_input("Enter Value")
#     if st.button("Convert"):
#         result = distance_convertor(from_unit, to_unit, value)
#         st.success(f"{value} {from_unit} = {result:.2f} {to_unit}")
# 
# elif category == "Temperature":
#     from_unit = st.selectbox("From", ["Celsius", "Fahrenheit"])
#     to_unit = st.selectbox("To", ["Celsius", "Fahrenheit"])
#     value = st.number_input("Enter Value")
#     if st.button("Convert"):
#         result = temperature_convertor(from_unit, to_unit, value)
#         st.success(f"{value} {from_unit} = {result:.2f} {to_unit}")
# 
# elif category == "Weight":
#     from_unit = st.selectbox("From", ["Kilograms", "Grams", "Pounds", "Ounces"])
#     to_unit = st.selectbox("To", ["Kilograms", "Grams", "Pounds", "Ounces"])
#     value = st.number_input("Enter Value")
#     if st.button("Convert"):
#         result = weight_convertor(from_unit, to_unit, value)
#         st.success(f"{value} {from_unit} = {result:.2f} {to_unit}")
# 
# elif category == "Pressure":
#     from_unit = st.selectbox("From", ["Pascals", "Hectopascals", "Kilopascals", "Bar"])
#     to_unit = st.selectbox("To", ["Pascals", "Hectopascals", "Kilopascals", "Bar"])
#     value = st.number_input("Enter Value")
#     if st.button("Convert"):
#         result = pressure_convertor(from_unit, to_unit, value)
#         st.success(f"{value} {from_unit} = {result:.2f} {to_unit}")
#

from pyngrok import ngrok
public_url = ngrok.connect(8501)
print("Streamlit app is live at:", public_url)

!streamlit run app.py &
